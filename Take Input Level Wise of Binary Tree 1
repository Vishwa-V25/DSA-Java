Take Input Level Wise of Binary Tree and then print in the inorder format

Input Format

-

Constraints

-

Output Format

Inorder traversal of Binary tree

Sample Input 0

1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1
Sample Output 0

4 2 5 1 6 3 7
_____________________________________________________________________________________________________________________________________________________________________________________________________________________

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

class node{
    int data;
    node left;
    node right;
    node (int d){
        data=d;
    }
}
public class Solution {
   static void display(node root){
      if(root==null){
          return;
      }
       else{
           display(root.left);
           System.out.print(root.data+" ");
           display(root.right);
       }
   } 
   public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      String arr[]=sc.nextLine().split(" ");
      Queue<node> q=new LinkedList<>();
      node root=new node(Integer.parseInt(arr[0]));
      q.add(root);
      int i=1;
      while(!q.isEmpty()){
        node t=q.poll();
        int a=Integer.parseInt(arr[i]);
         i=i+1;
         if(a!=-1){
             node nn=new node(a);
             t.left=nn;
             q.add(nn);
         }
         int b=Integer.parseInt(arr[i]);
         i=i+1;
         if(b!=-1){
             node nn=new node(b);
             t.right=nn;
             q.add(nn);
         }
     }
      display(root);
       
    }
}
